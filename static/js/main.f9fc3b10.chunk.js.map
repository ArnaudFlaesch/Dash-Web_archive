{"version":3,"sources":["enums/WidgetsEnum.ts","pages/store/Store.tsx","modals/CreateWidgetModal.tsx","services/auth.header.ts","utils/LogUtils.ts","modals/ImportConfigModal.tsx","services/config.service.ts","navigation/navDash/NavDash.tsx","services/tab.service.ts","services/auth.service.ts","pages/login/Login.tsx","reducers/actionTypes.ts","reducers/actions.ts","services/widget.service.ts","tab_facebook/TabNavigation.tsx","widgets/facebook/FacebookWidget.tsx","enums/ModeEnum.ts","widgets/facebook/groups/GroupsTab.tsx","widgets/facebook/FacebookAPI.ts","widgets/facebook/events/EventsTab.tsx","components/detailComponent/ComponentWithDetail.tsx","widgets/utils/DeleteWidget.tsx","widgets/Widget.tsx","widgets/utils/circular-progress/CircularProgressBar.tsx","widgets/steam/details/GameDetails.tsx","widgets/steam/SteamWidget.tsx","widgets/calendar/emptyWidget/EmptyCalendarWidget.tsx","widgets/calendar/CalendarWidget.tsx","utils/DateUtils.ts","widgets/rss/article/RSSArticle.tsx","widgets/rss/emptyWidget/EmptyRSSWidget.tsx","widgets/rss/RSSWidget.tsx","hooks/localStorageHook.ts","widgets/strava/activity/StravaActivity.tsx","widgets/strava/StravaWidget.tsx","widgets/weather/emptyWidget/EmptyWeatherWidget.tsx","widgets/weather/WeatherWidget.tsx","widgets/weather/forecast/Forecast.tsx","tab/TabDash.tsx","Dash.tsx","reducers/tabReducer.ts","reducers/store.ts","registerServiceWorker.ts","index.tsx"],"names":["WidgetTypes","Store","props","className","Object","keys","map","key","isNaN","parseInt","Card","CardImg","top","width","src","alt","CardBody","CardTitle","CardSubtitle","CardText","Button","id","onClick","onWidgetAdded","value","CreateWidgetModal","useState","createWidgetModal","setCreateWidgetModal","toggleCreateWidgetModal","Modal","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","color","authorizationBearer","localStorage","getItem","user","JSON","parse","accessToken","logger","winston","format","combine","json","colorize","all","level","transports","Console","ImportConfigModal","selectedFile","setSelectedFile","importConfigModal","setImportConfigModal","toggleImportConfigModal","type","name","onChange","event","target","files","disabled","file","formData","FormData","append","axios","post","process","headers","Authorization","importConfig","then","response","catch","error","NavDash","tab","label","setLabel","isToggled","saveTabName","tabOrder","updateTab","NavItem","NavLink","onTabClicked","onDoubleClick","onKeyPress","delete","onTabDeleted","login","username","password","data","setItem","stringify","logout","removeItem","window","location","reload","getCurrentUser","Login","setUsername","setPassword","loading","setLoading","message","setMessage","htmlFor","e","AuthService","resMessage","toString","role","TOGGLE_TAB","toggleSelectedTab","payload","updateWidgetData","patch","TabNavigation","tabList","to","path","title","exact","component","ModeEnum","tabs","useEffect","Promise","resolve","reject","debug","FB","api","fields","groupsData","Error","result","FacebookWidget","checkLoginStatus","getLoginStatus","facebookLoginHandler","facebookLogin","setState","loginStatusResponse","status","scope","facebookLogout","userData","undefined","fbAsyncInit","init","appId","xfbml","version","fbInitEvent","Event","document","dispatchEvent","d","s","js","getElementsByTagName","fjs","getElementById","createElement","parentNode","insertBefore","addEventListener","removeEventListener","this","element","state","first_name","last_name","Component","ComponentWithDetail","openCollapse","setOpenCollapse","isClosed","onOpenDetail","componentRoot","Collapse","componentDetail","DeleteWidget","onCancelButtonClicked","onDeleteButtonClicked","idWidget","Widget","READ","mode","setMode","useCustomEventListener","refreshFunction","config","header","additionalActionButtons","editModeComponent","EDIT","DELETE","body","percentageToDegrees","percentage","CircularProgressBar","style","transform","Math","round","GameDetails","achievements","setAchievements","completedAchievements","setCompletedAchievements","GET_ACHIVEMENTS_URL","appid","get","params","url","playerstats","filter","achievement","achieved","href","img_logo_url","length","SteamWidget","playerData","setPlayerData","ownedGames","setOwnedGames","STEAM_API_URL","GET_PLAYER_SUMMARIES_URL","GET_OWNED_GAMES_URL","refreshWidget","players","games","sort","gameA","gameB","localeCompare","widgetHeader","profileurl","avatar","personaname","widgetBody","game","img_icon_url","link","tabId","EmptyCalendarWidget","calendarUrls","setCalendarUrls","onCalendarUrlUpdated","index","placeholder","calendarUrl","concat","onConfigSubmitted","CalendarWidget","calendars","schedules","setSchedules","locales","fr","localizer","dateFnsLocalizer","startOfWeek","getDay","ical","oldSchedules","eventKey","summary","start","end","allDay","getHours","culture","events","startAccessor","endAccessor","defaultView","popup","height","updatedCalendars","formatDateFromTimestamp","timestamp","offset","Date","adjustTimeWithOffset","localeOffset","getTimezoneOffset","abs","offsetMilliseconds","stripHtmlFromContent","content","div","innerHTML","textContent","innerText","RSSArticle","description","date","pubDate","toLocaleString","author","EmptyRSSWidget","setUrl","onUrlSubmitted","RSSWidget","feed","setFeed","setDecription","image","setImage","setLink","setTitle","isFeedClosed","setFeedClosed","readArticlesGuids","readArticles","setReadArticles","rssParser","RSSParser","fetchDataFromRssFeed","apiResult","parseString","items","formatTitleForArticle","article","toLocaleTimeString","hour","minute","includes","guid","updateRssFeed","rssUrl","guidsList","useLocalStorage","initialValue","item","storedValue","setStoredValue","valueToStore","Function","StravaActivity","start_date_local","distance","moving_time","total_elevation_gain","achievement_count","average_speed","max_speed","kudos_count","comment_count","StravaWidget","activities","setActivities","athlete","setAthlete","token","setToken","refreshToken","setRefreshToken","tokenExpirationDate","setTokenExpirationDate","search","useLocation","isAfter","reverse","refreshTokenFromApi","client_id","client_secret","refresh_token","grant_type","access_token","expires_at","getActivitiesByMonth","reduce","activitiesByMonth","activity","month","push","getStatsFromActivities","activitiesByMonthList","x","y","total","values","queryString","code","apiCode","getToken","isBefore","profile_medium","firstname","lastname","overflowY","slice","minHeight","maxHeight","flex","labels","datasets","backgroundColor","act","yAxisID","order","EmptyWeatherWidget","city","setCity","ForecastMode","Forecast","dt","timezone","weekday","day","weather","icon","main","temp_max","temp_min","humidity","WeatherWidget","WEATHER_API","API_OPTIONS","cityToQuery","setCityToQuery","setWeather","forecast","setForecast","TODAY","forecastMode","setForecastMode","fetchDataFromWeatherApi","list","filterForecastByMode","WEEK","forecastDay","TOMORROW","placeItems","temp","sys","sunrise","sunset","alignContent","display","maxWidth","borderColor","feels_like","options","maintainAspectRatio","updatedCity","TabDash","widgets","setWidgets","activeTab","useSelector","createWidget","widgetConfig","WEATHER","deleteWidgetFromDashboard","RSS","CALENDAR","STRAVA","STEAM","deleteWidget","widget","fetch","newWidget","TabPane","Dash","setTabs","setNewWidget","dispatch","useDispatch","isMounted","useRef","refreshAllWidgets","emitCustomEvent","addNewTab","insertedTab","interval","setInterval","clearInterval","current","authService","Nav","vertical","navbar","addWidget","currentTarget","widgetData","responseType","info","URL","createObjectURL","Blob","setAttribute","appendChild","click","onDragEnd","destination","startIndex","endIndex","Array","from","splice","removed","reorder","source","updateTabs","droppableId","direction","providedDroppable","droppableProps","ref","innerRef","draggableId","providedDraggable","draggableProps","dragHandleProps","toggleTab","TabContent","initialState","createStore","action","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","ReactDOM","store","origin","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f9fc3b10.chunk.js","sourcesContent":["export enum WidgetTypes {\n  WEATHER = 1,\n  RSS = 2,\n  CALENDAR = 3,\n  STRAVA = 4,\n  STEAM = 5\n}\n","import { FunctionComponent, MouseEvent } from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardSubtitle,\n  CardText,\n  CardTitle\n} from 'reactstrap';\nimport { WidgetTypes } from '../../enums/WidgetsEnum';\n\ninterface IProps {\n  onWidgetAdded: (type: MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst Store: FunctionComponent<IProps> = (props) => {\n  return (\n    <div className=\"flexRow\">\n      {Object.keys(WidgetTypes).map((key) => {\n        return (\n          isNaN(parseInt(key, 0)) && (\n            <Card key={key}>\n              <CardImg\n                top={true}\n                width=\"100%\"\n                src=\"/assets/318x180.svg\"\n                alt=\"Card image cap\"\n              />\n              <CardBody>\n                <CardTitle>{key}</CardTitle>\n                <CardSubtitle>Widget {key}</CardSubtitle>\n                <CardText>\n                  Cliquez ci-dessous pour ajouter un widget {key} au dashboard.\n                </CardText>\n                <Button\n                  id={key}\n                  onClick={props.onWidgetAdded}\n                  className=\"btn btn-success\"\n                  value={WidgetTypes[key]}\n                >\n                  Ajouter\n                </Button>\n              </CardBody>\n            </Card>\n          )\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Store;\n","import { ReactElement, useState, MouseEvent } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Store from 'src/pages/store/Store';\n\ninterface IProps {\n  onWidgetAdded: (type: MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport default function CreateWidgetModal(props: IProps): ReactElement {\n  const [createWidgetModal, setCreateWidgetModal] = useState(false);\n\n  function toggleCreateWidgetModal() {\n    setCreateWidgetModal(!createWidgetModal);\n  }\n\n  return (\n    <div>\n      <Button\n        id=\"openAddWidgetModal\"\n        className=\"dashNavbarLink\"\n        onClick={toggleCreateWidgetModal}\n      >\n        <i className=\"fa fa-plus-circle fa-lg\" aria-hidden=\"true\" />\n      </Button>\n      <Modal isOpen={createWidgetModal} toggle={toggleCreateWidgetModal}>\n        <ModalHeader toggle={toggleCreateWidgetModal}>\n          Ajouter un widget\n        </ModalHeader>\n        <ModalBody>\n          <Store onWidgetAdded={props.onWidgetAdded} />\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            id=\"closeAddWidgetModal\"\n            color=\"primary\"\n            onClick={toggleCreateWidgetModal}\n          >\n            Fermer\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n","export default function authorizationBearer(): string {\n  if (localStorage.getItem('user')) {\n    const user = JSON.parse(localStorage.getItem('user') || '');\n    if (user && user.accessToken) {\n      return 'Bearer ' + user.accessToken;\n    } else {\n      return '';\n    }\n  } else {\n    return '';\n  }\n}\n","import * as winston from 'winston';\n\nconst logger = winston.createLogger({\n  format: winston.format.combine(\n    winston.format.json(),\n    winston.format.colorize({ all: true })\n  ),\n  level: 'debug',\n  transports: [new winston.transports.Console()]\n});\n\nexport default logger;\n","import { ChangeEvent, ReactElement, useState } from 'react';\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport { importConfig } from 'src/services/config.service';\nimport logger from 'src/utils/LogUtils';\n\nexport default function ImportConfigModal(): ReactElement {\n  const [selectedFile, setSelectedFile] = useState<File>();\n  const [importConfigModal, setImportConfigModal] = useState(false);\n\n  function toggleImportConfigModal() {\n    setImportConfigModal(!importConfigModal);\n  }\n\n  function selectFile(event: ChangeEvent<HTMLInputElement>) {\n    if (event.target.files && event.target.files[0]) {\n      setSelectedFile(event.target.files[0]);\n    }\n  }\n\n  function upload() {\n    if (selectedFile) {\n      return importConfig(selectedFile)\n        .then((response: boolean) => {\n          if (response) {\n            toggleImportConfigModal();\n          }\n        })\n        .catch(() => {\n          logger.error(\"Erreur lors de l'import du fichier\");\n        });\n    }\n  }\n\n  return (\n    <div>\n      <Button\n        id=\"openImportConfigModal\"\n        className=\"dashNavbarLink\"\n        onClick={toggleImportConfigModal}\n      >\n        <i className=\"fa fa-upload fa-lg\" aria-hidden=\"true\" />\n      </Button>\n      <Modal isOpen={importConfigModal} toggle={toggleImportConfigModal}>\n        <ModalHeader toggle={toggleImportConfigModal}>\n          Importer la configuration\n        </ModalHeader>\n        <ModalBody>\n          <input type=\"file\" id=\"file\" name=\"file\" onChange={selectFile} />\n\n          <button\n            id=\"uploadFileButton\"\n            className=\"btn btn-success\"\n            disabled={!selectedFile}\n            onClick={upload}\n          >\n            Upload\n          </button>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            id=\"closeImportConfigModal\"\n            color=\"primary\"\n            onClick={toggleImportConfigModal}\n          >\n            Fermer\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n","import axios, { AxiosResponse } from 'axios';\nimport authorizationBearer from './auth.header';\n\nexport function exportConfig(): Promise<AxiosResponse<BlobPart>> {\n  return axios.get(`${process.env.REACT_APP_BACKEND_URL}/config/export`, {\n    headers: {\n      Authorization: authorizationBearer(),\n      'Content-type': 'application/json'\n    },\n    responseType: 'blob'\n  });\n}\n\nexport function importConfig(file: File): Promise<boolean> {\n  const formData = new FormData();\n  formData.append('file', file);\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/config/import`,\n    formData,\n    {\n      headers: {\n        Authorization: authorizationBearer(),\n        'content-type': 'multipart/form-data'\n      }\n    }\n  );\n}\n","import { ReactElement, useState } from 'react';\nimport { Button, NavItem, NavLink } from 'reactstrap';\nimport { ITab } from '../../model/Tab';\nimport { deleteTab, updateTab } from '../../services/tab.service';\ninterface IProps {\n  tab: ITab;\n  onTabClicked: () => void;\n  onTabDeleted: (id: number) => void;\n}\n\nexport default function NavDash(props: IProps): ReactElement {\n  const [label, setLabel] = useState(props.tab.label);\n  const [isToggled, toggle] = useState(false);\n\n  function deleteTabFromDash() {\n    deleteTab(props.tab.id).then(() => props.onTabDeleted(props.tab.id));\n  }\n\n  function saveTabName() {\n    updateTab(props.tab.id, label, props.tab.tabOrder).then(() => {\n      toggle(!isToggled);\n    });\n  }\n\n  function clickToggle() {\n    toggle(!isToggled);\n  }\n\n  function enterSaveTabName(event: React.KeyboardEvent): void {\n    if (event.key === 'Enter') {\n      saveTabName();\n    }\n  }\n\n  return (\n    <NavItem className=\"clickableItem\" key={props.tab.id}>\n      <NavLink onClick={props.onTabClicked}>\n        {isToggled ? (\n          <div className=\"flexRow\">\n            <input\n              onDoubleClick={saveTabName}\n              onKeyPress={enterSaveTabName}\n              onChange={(event) => setLabel(event.target.value)}\n              value={label}\n            />\n            <Button className=\"deleteTabButton\" onClick={deleteTabFromDash}>\n              <i className=\"fa fa-trash\" />\n            </Button>\n          </div>\n        ) : (\n          <span onDoubleClick={clickToggle}>{label}</span>\n        )}\n      </NavLink>\n    </NavItem>\n  );\n}\n","import axios, { AxiosResponse } from 'axios';\nimport { ITab } from '../model/Tab';\nimport authorizationBearer from './auth.header';\n\nexport function getTabs(): Promise<AxiosResponse<unknown>> {\n  return axios.get(`${process.env.REACT_APP_BACKEND_URL}/tab`, {\n    headers: {\n      Authorization: authorizationBearer(),\n      'Content-type': 'application/json'\n    }\n  });\n}\n\nexport function addTab(label: string): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/addTab`,\n    { label: label },\n    {\n      headers: {\n        Authorization: authorizationBearer(),\n        'Content-type': 'application/json'\n      }\n    }\n  );\n}\n\nexport function updateTab(\n  id: number,\n  label: string,\n  tabOrder: number\n): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/updateTab`,\n    { id: id, label: label, tabOrder: tabOrder },\n    {\n      headers: {\n        Authorization: authorizationBearer(),\n        'Content-type': 'application/json'\n      }\n    }\n  );\n}\n\nexport function updateTabs(tabs: ITab[]): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/updateTabs`,\n    tabs,\n    {\n      headers: {\n        Authorization: authorizationBearer(),\n        'Content-type': 'application/json'\n      }\n    }\n  );\n}\n\nexport function deleteTab(id: number): Promise<AxiosResponse<unknown>> {\n  return axios.delete(\n    `${process.env.REACT_APP_BACKEND_URL}/tab/deleteTab/?id=${id}`,\n    {\n      headers: {\n        Authorization: authorizationBearer(),\n        'Content-type': 'application/json'\n      }\n    }\n  );\n}\n","import axios, { AxiosResponse } from 'axios';\n\nconst headers = {\n  'Content-type': 'application/json'\n};\n\nfunction login(\n  username: string,\n  password: string\n): Promise<AxiosResponse<unknown>> {\n  return axios\n    .post(\n      `${process.env.REACT_APP_BACKEND_URL}/auth/login`,\n      {\n        username,\n        password\n      },\n      {\n        headers\n      }\n    )\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem('user', JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n}\n\nfunction logout(): void {\n  localStorage.removeItem('user');\n  window.location.reload();\n}\n\nfunction getCurrentUser(): unknown {\n  if (localStorage.getItem('user')) {\n    return JSON.parse(localStorage.getItem('user') || '');\n  }\n}\n\nexport default {\n  login,\n  logout,\n  getCurrentUser\n};\n","import React, { useState } from \"react\";\nimport AuthService from \"../../services/auth.service\";\n\nexport default function Login(): React.ReactElement {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    const onChangeUsername = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setUsername(e.target.value);\n    };\n\n    const onChangePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setPassword(e.target.value);\n    };\n\n    function handleLogin() {\n\n        setMessage(\"\");\n        setLoading(true);\n\n        if (username && password) {\n            AuthService.login(username, password).then(\n                () => {\n                    window.location.reload();\n                    setLoading(false);\n                },\n                (error) => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    setLoading(false);\n                    setMessage(resMessage);\n                }\n            )\n        } else {\n            setLoading(false);\n        }\n    }\n\n    return (\n        <div className=\"col-md-12\">\n            <div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input\n                        id=\"inputUsername\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"username\"\n                        value={username}\n                        onChange={onChangeUsername}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        id=\"inputPassword\"\n                        type=\"password\"\n                        className=\"form-control\"\n                        name=\"password\"\n                        value={password}\n                        onChange={onChangePassword}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <button id=\"loginButton\" disabled={!username || !password || loading} onClick={handleLogin} className=\"btn btn-success btn-block\">\n                        {loading && (\n                            <span className=\"spinner-border spinner-border-sm\"></span>\n                        )}\n                        <span>Se connecter</span>\n                    </button>\n                </div>\n\n                {message && (\n                    <div className=\"form-group\">\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            {message}\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}","export const TOGGLE_TAB = 'TOGGLE_TAB';\n","import { TOGGLE_TAB } from './actionTypes';\n\nexport const toggleSelectedTab = (\n  id: number\n): { type: string; payload: { id: number } } => ({\n  type: TOGGLE_TAB,\n  payload: {\n    id\n  }\n});\n","import axios, { AxiosResponse } from 'axios';\nimport { IWidgetConfig } from 'src/widgets/IWidgetConfig';\nimport authorizationBearer from './auth.header';\n\nexport function addWidget(\n  type: string,\n  tabId: number\n): Promise<AxiosResponse<unknown>> {\n  return axios.post(\n    `${process.env.REACT_APP_BACKEND_URL}/widget/addWidget`,\n    { type: type, tab: { id: tabId } },\n    {\n      headers: {\n        Authorization: authorizationBearer(),\n        'Content-type': 'application/json'\n      }\n    }\n  );\n}\n\nexport function updateWidgetData(\n  id: number,\n  data: unknown\n): Promise<AxiosResponse<IWidgetConfig>> {\n  return axios.patch(\n    `${process.env.REACT_APP_BACKEND_URL}/widget/updateWidgetData/${id}`,\n    { data: data },\n    {\n      headers: {\n        Authorization: authorizationBearer(),\n        'Content-type': 'application/json'\n      }\n    }\n  );\n}\n\nexport function deleteWidget(id: number): Promise<AxiosResponse<unknown>> {\n  return axios.delete(\n    `${process.env.REACT_APP_BACKEND_URL}/widget/deleteWidget/?id=${id}`,\n    {\n      headers: {\n        Authorization: authorizationBearer(),\n        'Content-type': 'application/json'\n      }\n    }\n  );\n}\n","import { FunctionComponent } from 'react';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport ITab from './ITab';\nimport './TabNavigation.scss';\n\ninterface IProps {\n  tabList: ITab[];\n}\n\nconst TabNavigation: FunctionComponent<IProps> = (props) => {\n  return (\n    <div>\n      <Router>\n        <div>\n          <div className=\"tabContainer\">\n            {props.tabList.map((tab: ITab) => {\n              return (\n                <div key={tab.title}>\n                  <Link to={tab.path}>{tab.title}</Link>\n                </div>\n              );\n            })}\n          </div>\n          <div>\n            {props.tabList.map((tab: ITab) => {\n              return (\n                <div key={tab.title}>\n                  <Route\n                    path={tab.path}\n                    exact={tab.exact}\n                    component={tab.component}\n                  />\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default TabNavigation;\n","import { Component } from 'react';\nimport ITab from '../../tab_facebook/ITab';\nimport TabNavigation from '../../tab_facebook/TabNavigation';\nimport logger from '../../utils/LogUtils';\nimport EventsTab from './events/EventsTab';\nimport { getProfileInfo } from './FacebookAPI';\nimport GroupsTab from './groups/GroupsTab';\nimport IFBUser from './IFBUser';\n\ndeclare const window: any;\ndeclare const FB: any;\n\ninterface IProps {\n  appId?: string;\n}\n\ninterface IState {\n  loginStatusResponse: any;\n  userData?: IFBUser;\n}\n\nconst tabs: ITab[] = [\n  {\n    title: 'Groupes',\n    component: GroupsTab,\n    path: '/groups/'\n  },\n  {\n    title: 'Events',\n    component: EventsTab,\n    path: '/events/'\n  }\n];\n\nexport default class FacebookWidget extends Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    window.fbAsyncInit = () => {\n      FB.init({\n        appId: props.appId,\n        xfbml: true,\n        version: 'v3.2'\n      });\n\n      // Broadcast an event when FB object is ready\n      const fbInitEvent = new Event('FBObjectReady');\n      document.dispatchEvent(fbInitEvent);\n    };\n    ((d, s, id) => {\n      let js: any = d.getElementsByTagName(s)[0];\n      const fjs: Element = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {\n        return;\n      }\n      js = d.createElement(s);\n      js.id = id;\n      js.src = 'https://connect.facebook.net/en_US/sdk.js';\n      if (fjs && fjs.parentNode) {\n        fjs.parentNode.insertBefore(js, fjs);\n      }\n    })(document, 'script', 'facebook-jssdk');\n    document.addEventListener('FBObjectReady', this.checkLoginStatus);\n  }\n\n  public componentWillUnmount(): void {\n    document.removeEventListener('FBObjectReady', this.checkLoginStatus);\n  }\n\n  public checkLoginStatus = (): void => {\n    FB.getLoginStatus(this.facebookLoginHandler);\n  };\n\n  /**\n   * Check login status and call login api is user is not logged in\n   */\n  public facebookLogin = (): void => {\n    logger.debug('facebookLogin');\n    FB.getLoginStatus((response: any) => {\n      logger.debug(response);\n      this.setState({ loginStatusResponse: response });\n      if (response.status !== 'connected') {\n        FB.login(this.facebookLoginHandler, {\n          scope:\n            'user_birthday,user_hometown,user_likes,user_photos,user_friends,user_status,user_tagged_places,user_posts,user_gender,user_link,email,public_profile'\n        });\n      }\n    });\n  };\n\n  public facebookLogout = (): void => {\n    FB.logout((response: any) => {\n      logger.debug(response);\n      this.setState({ userData: undefined, loginStatusResponse: response });\n    });\n  };\n\n  public facebookLoginHandler = (response: any): void => {\n    logger.debug('facebookLoginHandler');\n    this.setState({ loginStatusResponse: response });\n    if (response.status === 'connected') {\n      logger.debug('Connected');\n      getProfileInfo()\n        .then((result: IFBUser) => {\n          logger.debug('Result');\n          logger.debug(result);\n          this.setState({ userData: result });\n        })\n        .catch((error: Error) => {\n          logger.debug(error);\n        });\n    }\n  };\n\n  public render(): React.ReactElement {\n    let element = null;\n    if (\n      this.state &&\n      this.state.loginStatusResponse &&\n      this.state.loginStatusResponse.status === 'connected' &&\n      this.state.userData\n    ) {\n      const userData: IFBUser = this.state.userData;\n      element = (\n        <div>\n          <div>\n            {userData.first_name} {userData.last_name}\n          </div>\n          <div onClick={this.facebookLogout}>Se déconnecter</div>\n        </div>\n      );\n    } else {\n      element = (\n        <div\n          onClick={this.facebookLogin}\n          className=\"fb-login-button\"\n          data-max-rows=\"1\"\n          data-size=\"large\"\n          data-button-type=\"continue_with\"\n          data-use-continue-as=\"true\"\n        />\n      );\n    }\n    return (\n      <div>\n        {element}\n        {this.state && this.state.userData && (\n          <div>\n            <TabNavigation tabList={tabs} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","export enum ModeEnum {\n  READ = 1,\n  EDIT = 2,\n  DELETE = 3\n}\n","import { ReactElement, useEffect } from 'react';\nimport logger from '../../../utils/LogUtils';\nimport { getGroupsData } from '../FacebookAPI';\nimport IGroup from './IGroup';\n\nexport default function GroupsTab(): ReactElement {\n  useEffect(() => {\n    getGroupsData()\n      .then((result: unknown) => {\n        logger.debug(result as IGroup[]);\n      })\n      .catch((error: Error) => {\n        logger.debug(error);\n      });\n  }, []);\n\n  return <div>Liste des groupes auxquels vous appartenez</div>;\n}\n","import logger from '../../utils/LogUtils';\nimport IFBUser from './IFBUser';\n\ninterface IFB {\n  api: (url: string, data: unknown, response: (data:unknown) => unknown) => Promise<unknown>;\n}\n\ndeclare const FB: IFB;\n\nexport function getProfileInfo(): Promise<IFBUser> {\n  return new Promise((resolve, reject) => {\n    logger.debug('getProfile');\n    FB.api(\n      '/me',\n      {\n        fields: 'id,first_name,last_name,hometown,location,birthday,gender,link'\n      },\n      (userData: unknown) => {\n        if (userData) {\n          resolve(userData as IFBUser);\n        } else {\n          reject(Error('Promise rejected'));\n        }\n      }\n    );\n  });\n}\n\nexport function getGroupsData(): Promise<unknown> {\n  return new Promise((resolve, reject) => {\n    logger.debug('getGroupsData');\n    FB.api(\n      '/me/groups',\n      {\n        fields:\n          'administrator,bookmark_order,id,unread,cover,created_time,description,icon,email,link,name,purpose,venue,picture'\n      },\n      (groupsData) => {\n        if (groupsData) {\n          resolve(groupsData);\n        } else {\n          reject(Error('Promise rejected'));\n        }\n      }\n    );\n  });\n}\n","import { ReactElement, useEffect } from 'react';\nimport logger from '../../../utils/LogUtils';\n\nexport default function EventsTab(): ReactElement {\n  useEffect(() => {\n    logger.debug('onComponentDidMount');\n  });\n\n  return <div>Liste des prochains évènements</div>;\n}\n","import { useEffect, useState } from 'react';\nimport { Card, CardBody, Collapse } from 'reactstrap';\nimport './ComponentWithDetail.scss';\n\ninterface IProps {\n  componentRoot: React.ReactNode | string;\n  componentDetail: React.ReactNode | string;\n  link?: string;\n  isClosed?: boolean;\n  onOpenDetail?: () => void;\n}\n\nexport default function ComponentWithDetail(props: IProps): React.ReactElement {\n  const [openCollapse, setOpenCollapse] = useState(false);\n\n  useEffect(() => {\n    if (props.isClosed) {\n      setOpenCollapse(false);\n    }\n  }, [props.isClosed]);\n\n  const toggleCollapse = () => {\n    if (!openCollapse && props.onOpenDetail) {\n      props.onOpenDetail();\n    }\n    setOpenCollapse(!openCollapse);\n  };\n\n  return (\n    <div>\n      <div onClick={toggleCollapse} className=\"title\">\n        {props.componentRoot}\n      </div>\n      <div>\n        <Collapse isOpen={openCollapse}>\n          <Card>\n            <CardBody>\n              {openCollapse && props.componentDetail && props.componentDetail}\n            </CardBody>\n          </Card>\n        </Collapse>\n      </div>\n    </div>\n  );\n}\n","import { ReactElement } from \"react\";\n\ninterface IProps {\n  idWidget: number;\n  onCancelButtonClicked: () => void;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function DeleteWidget(props: IProps): ReactElement {\n  const confirmDeleteWidget = () => {\n    props.onDeleteButtonClicked(props.idWidget);\n  };\n\n  return (\n    <div>\n      <h4>Êtes-vous sûr de vouloir supprimer ce widget ?</h4>\n      <button\n        onClick={props.onCancelButtonClicked}\n        className=\"btn btn-primary cancelButton\"\n      >\n        Annuler\n      </button>\n      <button\n        onClick={confirmDeleteWidget}\n        className=\"btn btn-danger validateDeletionButton\"\n      >\n        Supprimer\n      </button>\n    </div>\n  );\n}\n","import { ReactElement, useEffect, useState } from 'react';\nimport { useCustomEventListener } from 'react-custom-events';\nimport { ModeEnum } from '../enums/ModeEnum';\nimport DeleteWidget from './utils/DeleteWidget';\n\ninterface IProps {\n  id: number;\n  tabId: number;\n  config: Record<string, unknown>;\n  header: ReactElement;\n  body: ReactElement;\n  additionalActionButtons?: ReactElement;\n  editModeComponent?: ReactElement<IProps>;\n  refreshFunction: () => void;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function Widget(props: IProps): ReactElement {\n  const [mode, setMode] = useState(ModeEnum.READ);\n\n  useCustomEventListener('refreshAllWidgets', () => {\n    props.refreshFunction();\n  });\n\n  useEffect(() => {\n    setMode(ModeEnum.READ);\n  }, [props.config]);\n\n  function editWidget() {\n    if (props.editModeComponent) {\n      setMode(ModeEnum.EDIT);\n    }\n  }\n\n  function cancelDeletion() {\n    setMode(ModeEnum.READ);\n  }\n\n  function deleteWidget() {\n    setMode(ModeEnum.DELETE);\n  }\n\n  return (\n    <div>\n      {mode === ModeEnum.READ && (\n        <div>\n          <div className=\"header\">\n            <div className=\"leftGroup widgetHeader\">{props.header}</div>\n            <div className=\"rightGroup\">\n              {props.additionalActionButtons}\n              {props.editModeComponent && (\n                <button\n                  onClick={editWidget}\n                  className=\"btn btn-default editButton\"\n                >\n                  <i className=\"fa fa-cog\" aria-hidden=\"true\" />\n                </button>\n              )}\n              <button\n                onClick={props.refreshFunction}\n                className=\"btn btn-default refreshButton\"\n              >\n                <i className=\"fa fa-refresh\" aria-hidden=\"true\" />\n              </button>\n              <button\n                onClick={deleteWidget}\n                className=\"btn btn-default deleteButton\"\n              >\n                <i className=\"fa fa-trash\" aria-hidden=\"true\" />\n              </button>\n            </div>\n          </div>\n          {props.body}\n        </div>\n      )}\n      {mode === ModeEnum.DELETE && (\n        <DeleteWidget\n          idWidget={props.id}\n          onDeleteButtonClicked={props.onDeleteButtonClicked}\n          onCancelButtonClicked={cancelDeletion}\n        />\n      )}\n      {mode === ModeEnum.EDIT &&\n        props.editModeComponent !== null &&\n        props.editModeComponent}\n    </div>\n  );\n}\n","import \"./CircularProgressBar.scss\"\n\nfunction percentageToDegrees(percentage: number): string {\n    return (percentage / 100 * 360).toString()\n}\n\ninterface IProps {\n    value: number;\n}\n\nconst CircularProgressBar: React.FunctionComponent<IProps> = (props) => {\n\n    return (\n        <div className=\"progress mx-auto\">\n            <span className=\"progressLeft\">\n                <span style={{ transform: (props.value > 50) ? `rotate(${percentageToDegrees((props.value) - 50)}deg)` : 'unset' }} className=\"progressBar border-primary\"></span>\n            </span>\n            <span className=\"progressRight\">\n                <span style={{ transform: (props.value > 50) ? `rotate(180deg)` : `rotate(${percentageToDegrees(props.value)}deg)` }} className=\"progressBar border-primary\"></span>\n            </span>\n            <div className=\"progressValue w-100 h-100 rounded-circle d-flex align-items-center justify-content-center\">\n                <div className=\"h2 font-weight-bold\">{Math.round(props.value)}%</div>\n            </div>\n        </div>\n    )\n}\n\nexport default CircularProgressBar;","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport authorizationBearer from 'src/services/auth.header';\nimport CircularProgressBar from 'src/widgets/utils/circular-progress/CircularProgressBar';\nimport { IGameInfo } from '../IGameInfo';\n\ninterface IAchievement {\n  apiname: string;\n  achieved: number;\n  unlocktime: number;\n}\n\nexport default function GameDetails(props: IGameInfo): React.ReactElement {\n  const [achievements, setAchievements] = useState([]);\n  const [completedAchievements, setCompletedAchievements] = useState([]);\n  const STEAM_API_URL = 'https://api.steampowered.com';\n  const STEAM_IMAGE_URL =\n    'https://cdn.cloudflare.steamstatic.com/steamcommunity/public/images/apps/';\n  const STEAM_COMMUNITY_URL = 'https://steamcommunity.com/app/';\n  const GET_ACHIVEMENTS_URL = `${STEAM_API_URL}/ISteamUserStats/GetPlayerAchievements/v0001/?appid=${props.appid}&key=${process.env.REACT_APP_STEAM_API_KEY}&steamid=${process.env.REACT_APP_STEAM_USER_ID}`;\n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n        headers: {\n          Authorization: authorizationBearer(),\n          'Content-type': 'application/json'\n        },\n        params: {\n          url: GET_ACHIVEMENTS_URL\n        }\n      })\n      .then((response) => {\n        if (response.data.playerstats.achievements) {\n          setAchievements(response.data.playerstats.achievements);\n          setCompletedAchievements(\n            response.data.playerstats.achievements.filter(\n              (achievement: IAchievement) => achievement.achieved === 1\n            )\n          );\n        }\n      });\n  }, [props]);\n\n  return (\n    <div>\n      <div className=\"flexRow\">\n        <div>{props.name}</div>\n        <a href={`${STEAM_COMMUNITY_URL}${props.appid}`}>\n          <img\n            src={`${STEAM_IMAGE_URL}${props.appid}/${props.img_logo_url}.jpg                  `}\n          />\n        </a>\n      </div>\n      {achievements && completedAchievements && achievements.length > 0 && (\n        <div className=\"flexRow\">\n          <div className=\"flexColumn\">\n            <div className=\"totalachievements\">\n              Succès : {achievements.length}\n            </div>\n            <div className=\"completedAchievements\">\n              Succès complétés : {completedAchievements.length}\n            </div>\n          </div>\n          <CircularProgressBar\n            value={(completedAchievements.length / achievements.length) * 100}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport ComponentWithDetail from 'src/components/detailComponent/ComponentWithDetail';\nimport authorizationBearer from 'src/services/auth.header';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport GameDetails from './details/GameDetails';\nimport { IGameInfo } from './IGameInfo';\n\ninterface IProps {\n  id: number;\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\ninterface IPlayerData {\n  personaname: string;\n  profileurl: string;\n  avatar: string;\n}\n\nexport default function SteamWidget(props: IProps): React.ReactElement {\n  const [playerData, setPlayerData] = useState<IPlayerData>();\n  const [ownedGames, setOwnedGames] = useState<IGameInfo[]>();\n\n  const STEAM_API_URL = 'https://api.steampowered.com';\n  const GET_PLAYER_SUMMARIES_URL = `/ISteamUser/GetPlayerSummaries/v0002/?key=${process.env.REACT_APP_STEAM_API_KEY}&steamids=${process.env.REACT_APP_STEAM_USER_ID}`;\n  const GET_OWNED_GAMES_URL = `/IPlayerService/GetOwnedGames/v0001/?key=${process.env.REACT_APP_STEAM_API_KEY}&steamid=${process.env.REACT_APP_STEAM_USER_ID}&format=json&include_appinfo=true`;\n  const STEAM_IMAGE_URL =\n    'https://cdn.cloudflare.steamstatic.com/steamcommunity/public/images/apps/';\n  const STEAM_COMMUNITY_URL = 'https://steamcommunity.com/app/';\n\n  useEffect(() => {\n    refreshWidget();\n  }, []);\n\n  function refreshWidget() {\n    getPlayerData();\n    getOwnedGames();\n  }\n\n  function getPlayerData(): void {\n    axios\n      .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n        headers: {\n          Authorization: authorizationBearer(),\n          'Content-type': 'application/json'\n        },\n        params: {\n          url: `${STEAM_API_URL}${GET_PLAYER_SUMMARIES_URL}`\n        }\n      })\n      .then((response) => {\n        setPlayerData(response.data.response.players[0]);\n      })\n      .catch((error: Error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function getOwnedGames(): void {\n    axios\n      .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n        headers: {\n          Authorization: authorizationBearer(),\n          'Content-type': 'application/json'\n        },\n        params: {\n          url: `${STEAM_API_URL}${GET_OWNED_GAMES_URL}`\n        }\n      })\n      .then((response) => {\n        setOwnedGames(\n          (response.data.response.games as IGameInfo[]).sort((gameA, gameB) =>\n            gameA.name.localeCompare(gameB.name)\n          )\n        );\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  const widgetHeader = (\n    <div>\n      <a href={playerData?.profileurl}>\n        <img src={playerData?.avatar} />\n        {playerData?.personaname}\n      </a>\n    </div>\n  );\n\n  const widgetBody = (\n    <div className=\"flexColumn\">\n      {ownedGames &&\n        ownedGames.map((game: IGameInfo) => {\n          return (\n            <ComponentWithDetail\n              key={game.appid}\n              componentRoot={\n                <div className=\"gameInfo flexRow\">\n                  <div>\n                    <img\n                      src={`${STEAM_IMAGE_URL}${game.appid}/${game.img_icon_url}.jpg                  `}\n                    />\n                  </div>\n                  <div>{game.name}</div>\n                </div>\n              }\n              componentDetail={<GameDetails {...game} />}\n              link={`${STEAM_COMMUNITY_URL}${game.appid}`}\n            />\n          );\n        })}\n    </div>\n  );\n\n  return (\n    <Widget\n      id={props.id}\n      tabId={props.tabId}\n      config={{}}\n      header={widgetHeader}\n      body={widgetBody}\n      refreshFunction={refreshWidget}\n      onDeleteButtonClicked={props.onDeleteButtonClicked}\n    />\n  );\n}\n","import { useState } from 'react';\nimport './EmptyCalendarWidget.scss';\n\ninterface IProps {\n  calendarUrls?: string[];\n  onConfigSubmitted: (calendarUrls: string[]) => void;\n}\n\nexport default function EmptyCalendarWidget(props: IProps): React.ReactElement {\n  const [calendarUrls, setCalendarUrls] = useState<string[]>(\n    props.calendarUrls || []\n  );\n  const onValidation = () => {\n    props.onConfigSubmitted(calendarUrls);\n  };\n\n  const onCalendarUrlUpdated = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setCalendarUrls(\n      calendarUrls.map((url: string, index: number) =>\n        index.toString() === event.target?.id ? event.target.value : url\n      )\n    );\n  };\n\n  const onCalendarUrlAdded = () => {\n    setCalendarUrls(calendarUrls.concat(''));\n  };\n\n  function removeCalendarUrl(calendarUrl: string) {\n    setCalendarUrls(calendarUrls.filter(url => url !== calendarUrl));\n  }\n\n  return (\n    <div>\n      <div>\n        {calendarUrls &&\n          calendarUrls.map((url, index) => {\n            return (\n              <div key={index}>\n                <input\n                  id={index.toString()}\n                  onChange={onCalendarUrlUpdated}\n                  value={url}\n                  placeholder=\"Saisissez une URL\"\n                />\n                <button className=\"removeCalendarUrl btn btn-danger\" onClick={() => removeCalendarUrl(url)}>Supprimer</button>\n              </div>\n            );\n          })}\n        <button id=\"addCalendarUrl\" className=\"btn btn-primary\" onClick={onCalendarUrlAdded}>\n          Ajouter\n        </button>\n      </div>\n      <button\n        id=\"validateCalendarUrls\"\n        onClick={onValidation}\n        disabled={!calendarUrls || calendarUrls?.length < 1}\n        className=\"btn btn-success\"\n      >\n        Valider\n      </button>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport format from 'date-fns/format';\nimport getDay from 'date-fns/getDay';\nimport { fr } from 'date-fns/locale';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport * as ical from 'ical';\nimport { ReactElement, useEffect, useState } from 'react';\nimport { Calendar, dateFnsLocalizer, Event } from 'react-big-calendar';\nimport authorizationBearer from 'src/services/auth.header';\nimport { updateWidgetData } from '../../services/widget.service';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport './CalendarWidget.scss';\nimport EmptyCalendarWidget from './emptyWidget/EmptyCalendarWidget';\n\nexport interface IProps {\n  id: number;\n  calendars?: string[];\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function CalendarWidget(props: IProps): ReactElement {\n  const [calendarUrls, setCalendarUrls] = useState(props.calendars);\n  const [schedules, setSchedules] = useState<Event[]>([]);\n\n  const locales = {\n    fr: fr\n  };\n  const localizer = dateFnsLocalizer({\n    format,\n    parse,\n    startOfWeek,\n    getDay,\n    locales\n  });\n\n  useEffect(() => {\n    refreshWidget();\n  }, [calendarUrls]);\n\n  function onConfigSubmitted(updatedCalendars: string[]) {\n    updateWidgetData(props.id, { calendars: updatedCalendars })\n      .then(() => {\n        if (updatedCalendars === calendarUrls) {\n          refreshWidget();\n        }\n        setCalendarUrls(updatedCalendars);\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function refreshWidget() {\n    setSchedules([]);\n    calendarUrls?.map((calendarUrl: string) => {\n      axios\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/?url=${calendarUrl}`, {\n          headers: {\n            Authorization: authorizationBearer(),\n            'Content-type': 'application/json'\n          }\n        })\n        .then((response) => {\n          const data = ical.parseICS(response.data);\n          setSchedules((oldSchedules) =>\n            oldSchedules.concat(\n              ...Object.keys(data).map((eventKey) => {\n                const event = data[eventKey];\n                return {\n                  title: event.summary,\n                  start: event.start,\n                  end: event.end,\n                  allDay:\n                    event.end?.getHours() === 0 && event.start?.getHours() === 0\n                };\n              })\n            )\n          );\n        })\n        .catch((error) => {\n          logger.error(error);\n        });\n    });\n  }\n\n  const widgetHeader = <div>Calendar</div>;\n\n  const widgetBody = (\n    <div>\n      <Calendar\n        localizer={localizer}\n        culture={'fr'}\n        events={schedules}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        defaultView=\"month\"\n        popup={true}\n        style={{ height: 500 }}\n      />\n    </div>\n  );\n\n  return (\n    <Widget\n      id={props.id}\n      tabId={props.tabId}\n      config={{ calendars: calendarUrls }}\n      header={widgetHeader}\n      body={widgetBody}\n      editModeComponent={\n        <EmptyCalendarWidget\n          calendarUrls={calendarUrls}\n          onConfigSubmitted={onConfigSubmitted}\n        />\n      }\n      refreshFunction={refreshWidget}\n      onDeleteButtonClicked={props.onDeleteButtonClicked}\n    />\n  );\n}\n","export function formatDateFromTimestamp(timestamp: number, offset = 0): Date {\n  return new Date(timestamp * 1000 + offset * 1000);\n}\n\nexport function formatDateFromUTC(date: string): string {\n  const parsedDate = new Date(date);\n  return parsedDate.toLocaleString('fr');\n}\n\nexport function adjustTimeWithOffset(offset: number): number {\n  const localeOffset = -(new Date().getTimezoneOffset() * 60);\n  if (Math.abs(offset) === Math.abs(localeOffset)) {\n    return 0;\n  }\n  const offsetMilliseconds = Math.abs(offset) + Math.abs(localeOffset);\n  return offset < localeOffset ? -offsetMilliseconds : offsetMilliseconds;\n}\n","import { FunctionComponent } from 'react';\nimport { formatDateFromUTC } from '../../../utils/DateUtils';\nimport { IArticle } from './IArticle';\nimport './RSSArticle.scss';\n\nfunction stripHtmlFromContent(content?: string) {\n  const div = document.createElement('div');\n  div.innerHTML = content || '';\n  return div.textContent || div.innerText || '';\n}\n\nconst RSSArticle: FunctionComponent<IArticle> = (props) => {\n  return (\n    <div className=\"article\">\n      <div className=\"articleTitle\">\n        <a href={props.link}>{props.title}</a>\n      </div>\n      <div className=\"articleContent\">\n        {stripHtmlFromContent(props.content) ||\n          stripHtmlFromContent(props.description)}\n      </div>\n      <div className=\"articlePubDate\">\n        Publié le {formatDateFromUTC(props.pubDate || '')}{' '}\n        {props.author && 'par ' + props.author}\n      </div>\n    </div>\n  );\n};\n\nexport default RSSArticle;\n","import { useState } from 'react';\nimport './EmptyRSSWidget.scss';\n\ninterface IProps {\n  url?: string;\n  onUrlSubmitted: (url: string) => void;\n}\n\nexport default function EmptyRSSWidget(props: IProps): React.ReactElement {\n  const [url, setUrl] = useState(props.url);\n  const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setUrl(event.target.value);\n  const onValidation = () => {\n    if (url) {\n      props.onUrlSubmitted(url);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        id=\"rssFeedUrl\"\n        name=\"url\"\n        onChange={onChangeHandler}\n        value={url}\n        placeholder=\"Saisissez l'URL du flux RSS\"\n      />\n      <button\n        onClick={onValidation}\n        disabled={!url || url?.length < 1}\n        className=\"btn btn-success\"\n      >\n        Valider\n      </button>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport RSSParser from 'rss-parser';\nimport authorizationBearer from 'src/services/auth.header';\nimport ComponentWithDetail from '../../components/detailComponent/ComponentWithDetail';\nimport { updateWidgetData } from '../../services/widget.service';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport { IArticle, ImageContent, IRSSHeader } from './article/IArticle';\nimport RSSArticle from './article/RSSArticle';\nimport EmptyRSSWidget from './emptyWidget/EmptyRSSWidget';\nimport './RSSWidget.scss';\n\ninterface IProps {\n  id: number;\n  url?: string;\n  tabId: number;\n  readArticlesGuids?: string[];\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function RSSWidget(props: IProps): React.ReactElement {\n  const [feed, setFeed] = useState<IArticle[]>([]);\n  const [url, setUrl] = useState(props.url || '');\n  const [description, setDecription] = useState('');\n  const [image, setImage] = useState<ImageContent>();\n  const [link, setLink] = useState('');\n  const [title, setTitle] = useState('');\n  const [isFeedClosed, setFeedClosed] = useState(true);\n  const [readArticles, setReadArticles] = useState<string[]>(\n    props.readArticlesGuids || []\n  );\n  const rssParser = new RSSParser();\n\n  function fetchDataFromRssFeed() {\n    if (url) {\n      axios\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/?url=${url}`, {\n          headers: {\n            Authorization: authorizationBearer(),\n            'Content-type': 'application/json'\n          }\n        })\n        .then((apiResult) => {\n          rssParser\n            .parseString(apiResult.data)\n            .then((response) => {\n              const result = response as IRSSHeader;\n              setDecription(result.description);\n              setFeed(result.items);\n              setImage(result.image);\n              setLink(result.link);\n              setTitle(result.title);\n            })\n            .catch((error) => {\n              logger.error(error.message);\n            });\n        })\n        .catch((error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  useEffect(() => {\n    fetchDataFromRssFeed();\n  }, [url]);\n\n  function refreshWidget() {\n    setFeed([]);\n    fetchDataFromRssFeed();\n  }\n\n  function onUrlSubmitted(rssUrl: string): void {\n    updateWidgetData(props.id, { url: rssUrl, guidsList: [] })\n      .then(() => {\n        setUrl(rssUrl);\n        refreshWidget();\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function formatTitleForArticle(article: IArticle) {\n    const date = article.pubDate\n      ? new Date(article.pubDate).toLocaleTimeString('fr', {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      : '';\n    return (\n      <div\n        className={`rssArticle ${\n          readArticles.includes(article.guid) ? 'read' : ''\n        }`}\n      >\n        {date} {article.title}\n      </div>\n    );\n  }\n\n  function onOpenDetail(guid: string): void {\n    setFeedClosed(false);\n    if (!readArticles.includes(guid)) {\n      updateRssFeed([guid, ...readArticles]);\n    }\n  }\n\n  function markAllFeedAsRead(): void {\n    updateRssFeed(feed.map((article) => article.guid));\n  }\n\n  function updateRssFeed(readArticlesGuids: string[]): void {\n    updateWidgetData(props.id, {\n      url: url,\n      readArticlesGuids: readArticlesGuids\n    })\n      .then((result) => {\n        setReadArticles(result.data.data.readArticlesGuids as []);\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function closeFeeds(): void {\n    setFeedClosed(true);\n  }\n\n  function getFeedFromRSS(data: IArticle[]) {\n    return data.map((article) => {\n      return (\n        <ComponentWithDetail\n          key={article.guid}\n          componentRoot={formatTitleForArticle(article)}\n          componentDetail={<RSSArticle {...article} />}\n          link={article.link}\n          isClosed={isFeedClosed}\n          onOpenDetail={() => onOpenDetail(article.guid)}\n        />\n      );\n    });\n  }\n\n  const widgetHeader = (\n    <div className=\"rssWidgetTitle\">\n      <a href={link} className=\"flexRow\">\n        {image && (\n          <div>\n            <img className=\"imgLogoRSS\" src={image?.url} alt=\"logo\" />\n          </div>\n        )}\n        <div className=\"rssTitle\">{title}</div>\n      </a>\n    </div>\n  );\n\n  const additionalActionButtons = (\n    <div className=\"flexRow\">\n      <button\n        onClick={markAllFeedAsRead}\n        className=\"btn btn-default markAllArticlesAsRead\"\n      >\n        <i className=\"fa fa-check-circle-o\" aria-hidden=\"true\" />\n      </button>\n      <button\n        onClick={closeFeeds}\n        className=\"btn btn-default minimizeAllArticles\"\n      >\n        <i className=\"fa fa-window-minimize\" aria-hidden=\"true\" />\n      </button>\n    </div>\n  );\n\n  const widgetBody = (\n    <div>\n      {url && feed && (\n        <div>\n          <div className=\"rssDescription\">{description}</div>\n          <div className=\"feed\">{getFeedFromRSS(feed)}</div>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <Widget\n      id={props.id}\n      tabId={props.tabId}\n      config={{ url: url }}\n      header={widgetHeader}\n      additionalActionButtons={additionalActionButtons}\n      body={widgetBody}\n      editModeComponent={\n        <EmptyRSSWidget url={url} onUrlSubmitted={onUrlSubmitted} />\n      }\n      refreshFunction={refreshWidget}\n      onDeleteButtonClicked={props.onDeleteButtonClicked}\n    />\n  );\n}\n","import { useState } from 'react';\nimport logger from '../utils/LogUtils';\n\nexport function useLocalStorage(\n  key: string,\n  initialValue: unknown\n): [unknown, (value: unknown) => void] {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      logger.error(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: unknown) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      logger.error(error);\n    }\n  };\n  return [storedValue, setValue];\n}\n","import { format } from 'date-fns';\nimport { ReactElement } from 'react';\nimport { IActivity } from '../IStrava';\n\nexport default function StravaActivity(props: IActivity): ReactElement {\n  return (\n    <div>\n      <div>\n        <a href={`https://www.strava.com/activities/${props.id}`}>\n          {format(new Date(props.start_date_local), 'dd MMM')}{' '}\n          {props.name}\n        </a>\n      </div>\n      <div>Distance : {Math.round(props.distance * 1000) / 10000} kms</div>\n      <div>Durée : {props.moving_time / 60} mins</div>\n      <div>Denivelé : {props.total_elevation_gain}</div>\n      <div>Trophées : {props.achievement_count}</div>\n      <div>Vitesse moyenne : {props.average_speed}</div>\n      <div>Vitesse max : {props.max_speed}</div>\n      <div>Kudos : {props.kudos_count}</div>\n      <div>Commentaires : {props.comment_count}</div>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport * as queryString from 'query-string';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button } from 'reactstrap';\nimport ComponentWithDetail from '../../components/detailComponent/ComponentWithDetail';\nimport { useLocalStorage } from '../../hooks/localStorageHook';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport StravaActivity from './activity/StravaActivity';\nimport { IActivity, IAthlete } from './IStrava';\nimport { format, isAfter, isBefore } from 'date-fns';\nimport ChartComponent from 'react-chartjs-2';\n\ninterface IProps {\n  id: number;\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nexport default function StravaWidget(props: IProps): React.ReactElement {\n  const [activities, setActivities] = useState([]);\n  const [athlete, setAthlete] = useState<IAthlete>();\n  const [token, setToken] = useLocalStorage('strava_token', null);\n  const [refreshToken, setRefreshToken] = useLocalStorage(\n    'strava_refresh_token',\n    null\n  );\n  const [tokenExpirationDate, setTokenExpirationDate] = useLocalStorage(\n    'strava_token_expires_at',\n    null\n  );\n  const { search } = useLocation();\n\n  const paginationActivities = 20;\n\n  useEffect(() => {\n    const values = queryString.parse(search);\n    if (values && values.code) {\n      const apiCode = values.code.toString();\n      getToken(apiCode);\n    }\n    if (\n      !token ||\n      !refreshToken ||\n      isBefore(new Date((tokenExpirationDate as number) * 1000), new Date())\n    ) {\n      refreshTokenFromApi();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (token) {\n      refreshWidget();\n    }\n  }, [token]);\n\n  function refreshWidget() {\n    setActivities([]);\n    getAthleteData();\n    getActivities();\n  }\n\n  function getToken(apiCode: string) {\n    axios\n      .post('https://www.strava.com/oauth/token', {\n        client_id: process.env.REACT_APP_STRAVA_CLIENT_ID,\n        client_secret: process.env.REACT_APP_STRAVA_CLIENT_SECRET,\n        code: apiCode,\n        grant_type: 'authorization_code'\n      })\n      .then((response) => {\n        setToken(response.data.access_token as string);\n        setRefreshToken(response.data.refresh_token);\n        setTokenExpirationDate(response.data.expires_at);\n        setAthlete(response.data.athlete);\n      })\n      .catch((error: Error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function refreshTokenFromApi() {\n    if (refreshToken) {\n      axios\n        .post('https://www.strava.com/oauth/token', {\n          client_id: process.env.REACT_APP_STRAVA_CLIENT_ID,\n          client_secret: process.env.REACT_APP_STRAVA_CLIENT_SECRET,\n          refresh_token: refreshToken,\n          grant_type: 'refresh_token'\n        })\n        .then((response) => {\n          setToken(response.data.access_token);\n          setRefreshToken(response.data.refresh_token);\n          setTokenExpirationDate(response.data.expires_at);\n          setAthlete(response.data.athlete);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    } else {\n      logger.error('No refresh token');\n    }\n  }\n\n  function getAthleteData() {\n    if (token) {\n      axios\n        .get('https://www.strava.com/api/v3/athlete', {\n          headers: { Authorization: `Bearer ${token}` }\n        })\n        .then((response) => {\n          setAthlete(response.data);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  function getActivities() {\n    if (\n      token &&\n      tokenExpirationDate &&\n      isAfter(new Date((tokenExpirationDate as number) * 1000), new Date())\n    ) {\n      axios\n        .get(\n          `https://www.strava.com/api/v3/athlete/activities?page=1&per_page=${paginationActivities}`,\n          { headers: { Authorization: `Bearer ${token}` } }\n        )\n        .then((response) => {\n          setActivities(response.data.reverse());\n        })\n        .catch((error) => {\n          logger.error(error.message);\n        });\n    } else {\n      refreshTokenFromApi();\n    }\n  }\n\n  function getActivitiesByMonth() {\n    return activities.reduce(\n      (activitiesByMonth: IActivity[], activity: IActivity) => {\n        const month = format(new Date(activity.start_date_local), 'yyyy-MM');\n        if (!activitiesByMonth[month]) {\n          activitiesByMonth[month] = [];\n        }\n        activitiesByMonth[month].push(\n          Math.round(activity.distance * 1000) / 1000000\n        );\n        return activitiesByMonth;\n      },\n      []\n    );\n  }\n\n  function getStatsFromActivities() {\n    const activitiesByMonthList = getActivitiesByMonth();\n    return Object.keys(activitiesByMonthList).map((month) => {\n      return {\n        x: new Date(month),\n        y: Math.round(\n          activitiesByMonthList[month].reduce(\n            (total: number, distance: number) => total + distance\n          )\n        )\n      };\n    });\n  }\n\n  const widgetHeader = (\n    <div>\n      <a href={`https://www.strava.com/athletes/${athlete?.id}`}>\n        <img src={athlete?.profile_medium} />\n        {athlete?.firstname} {athlete?.lastname}\n      </a>\n    </div>\n  );\n\n  const widgetBody = (\n    <div className=\"flexColumn\">\n      {token &&\n        refreshToken &&\n        tokenExpirationDate &&\n        isAfter(\n          new Date((tokenExpirationDate as number) * 1000),\n          new Date()\n        ) && (\n          <div>\n            <div style={{ height: '20vh', overflowY: 'scroll' }}>\n              {activities\n                .slice()\n                .reverse()\n                .map((activity: IActivity) => {\n                  return (\n                    <ComponentWithDetail\n                      key={activity.id}\n                      componentRoot={`${format(\n                        new Date(activity.start_date_local),\n                        'dd MMM'\n                      )}  ${activity.name}  ${\n                        Math.round(activity.distance * 1000) / 1000000\n                      } kms`}\n                      componentDetail={<StravaActivity {...activity} />}\n                      link={`https://www.strava.com/activities/${activity.id}`}\n                    />\n                  );\n                })}\n            </div>\n\n            <div\n              style={{ minHeight: '25vh', maxHeight: '80vh', flex: '1 0 50%' }}\n            >\n              <ChartComponent\n                type=\"bar\"\n                data={{\n                  labels: getStatsFromActivities().map((data) =>\n                    format(data.x, 'MMM yyyy')\n                  ),\n                  datasets: [\n                    {\n                      label: 'Distance (kms)',\n                      backgroundColor: 'orange',\n                      data: getStatsFromActivities().map((act) => act.y),\n                      yAxisID: 'kms',\n                      order: 2\n                    },\n                    {\n                      label: 'Activités',\n                      type: 'line',\n                      backgroundColor: 'darkgreen',\n                      data: Object.keys(getActivitiesByMonth()).map(\n                        (month) => getActivitiesByMonth()[month].length\n                      ),\n                      yAxisID: 'activities',\n                      order: 1\n                    }\n                  ]\n                }}\n              />\n            </div>\n          </div>\n        )}\n      {(!token ||\n        !refreshToken ||\n        (tokenExpirationDate &&\n          isBefore(\n            new Date((tokenExpirationDate as number) * 1000),\n            new Date()\n          ))) && (\n        <a\n          href={`https://www.strava.com/oauth/authorize?client_id=${process.env.REACT_APP_STRAVA_CLIENT_ID}&redirect_uri=${process.env.REACT_APP_FRONTEND_URL}&response_type=code&scope=read,activity:read`}\n        >\n          <Button>Se connecter</Button>\n        </a>\n      )}\n    </div>\n  );\n\n  return (\n    <Widget\n      id={props.id}\n      tabId={props.tabId}\n      config={{}}\n      header={widgetHeader}\n      body={widgetBody}\n      refreshFunction={refreshWidget}\n      onDeleteButtonClicked={props.onDeleteButtonClicked}\n    />\n  );\n}\n","import { useState } from 'react';\nimport './EmptyWeatherWidget.scss';\n\ninterface IProps {\n  city?: string;\n  onConfigSubmitted: (city: string) => void;\n}\n\nexport default function EmptyWeatherWidget(props: IProps): React.ReactElement {\n  const [city, setCity] = useState(props.city || '');\n  const onCityChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setCity(event.target.value);\n  const onValidation = () => {\n    props.onConfigSubmitted(city);\n  };\n\n  return (\n    <div>\n      <input\n        id=\"cityNameInput\"\n        name=\"city\"\n        onChange={onCityChangeHandler}\n        value={city}\n        placeholder=\"Saisissez de nom de la ville\"\n      />\n      <button\n        id=\"validateButton\"\n        className=\"btn btn-success\"\n        onClick={onValidation}\n        disabled={\n          !city ||\n          city?.length < 1\n        }\n      >\n        Valider\n      </button>\n    </div>\n  );\n}\n","import axios, { AxiosResponse } from 'axios';\nimport { format } from 'date-fns';\nimport { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport authorizationBearer from 'src/services/auth.header';\nimport { updateWidgetData } from '../../services/widget.service';\nimport {\n  adjustTimeWithOffset,\n  formatDateFromTimestamp\n} from '../../utils/DateUtils';\nimport logger from '../../utils/LogUtils';\nimport Widget from '../Widget';\nimport EmptyWeatherWidget from './emptyWidget/EmptyWeatherWidget';\nimport Forecast from './forecast/Forecast';\nimport { ICity, IForecast, IWeather, IWeatherAPIResponse } from './IWeather';\nimport './WeatherWidget.scss';\n\ninterface IProps {\n  id: number;\n  city?: string;\n  tabId: number;\n  onDeleteButtonClicked: (idWidget: number) => void;\n}\n\nenum ForecastMode {\n  TODAY,\n  TOMORROW,\n  WEEK\n}\n\nexport default function WeatherWidget(props: IProps): React.ReactElement {\n  const WEATHER_API = 'https://api.openweathermap.org/data/2.5/';\n  const WEATHER_ENDPOINT = 'weather';\n  const FORECAST_ENDPOINT = 'forecast';\n  const API_OPTIONS = '?units=metric&lang=fr&appid=';\n\n  const [cityToQuery, setCityToQuery] = useState(props.city);\n  const [weather, setWeather] = useState<IWeather>();\n  const [forecast, setForecast] = useState<IForecast[]>();\n  const [city, setCity] = useState<ICity>();\n  const [forecastMode, setForecastMode] = useState<ForecastMode>(\n    ForecastMode.TODAY\n  );\n\n  function fetchDataFromWeatherApi() {\n    if (cityToQuery) {\n      axios\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n          headers: {\n            Authorization: authorizationBearer(),\n            'Content-type': 'application/json'\n          },\n          params: {\n            url: `${WEATHER_API}${WEATHER_ENDPOINT}${API_OPTIONS}${process.env.REACT_APP_OPENWEATHERMAP_KEY}&q=${cityToQuery}`\n          }\n        })\n        .then((result) => {\n          setWeather(result.data);\n        })\n        .catch((error: Error) => {\n          logger.error(error);\n        });\n      axios\n        .get(`${process.env.REACT_APP_BACKEND_URL}/proxy/`, {\n          headers: {\n            Authorization: authorizationBearer(),\n            'Content-type': 'application/json'\n          },\n          params: {\n            url: `${WEATHER_API}${FORECAST_ENDPOINT}${API_OPTIONS}${process.env.REACT_APP_OPENWEATHERMAP_KEY}&q=${cityToQuery}`\n          }\n        })\n        .then((result: AxiosResponse) => {\n          setForecast((result.data as IWeatherAPIResponse).list);\n          setCity((result.data as IWeatherAPIResponse).city);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  useEffect(() => {\n    fetchDataFromWeatherApi();\n  }, [cityToQuery]);\n\n  function refreshWidget() {\n    setWeather(undefined);\n    setForecast(undefined);\n    setCity(undefined);\n    fetchDataFromWeatherApi();\n  }\n\n  function onConfigSubmitted(updatedCity: string) {\n    updateWidgetData(props.id, {\n      city: updatedCity\n    })\n      .then(() => {\n        setCityToQuery(updatedCity);\n        refreshWidget();\n      })\n      .catch((error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function filterForecastByMode(): IForecast[] {\n    if (city && forecast) {\n      switch (forecastMode) {\n        case ForecastMode.WEEK: {\n          return forecast.filter((forecastDay) => {\n            const forecastElement = formatDateFromTimestamp(\n              forecastDay.dt,\n              adjustTimeWithOffset(city.timezone)\n            );\n            return forecastElement.getHours() === 17;\n          });\n        }\n        case ForecastMode.TOMORROW: {\n          return forecast.filter(\n            (forecastDay) =>\n              new Date(forecastDay.dt * 1000).getDay() ===\n                new Date(+new Date() + 86400000).getDay() &&\n              new Date(forecastDay.dt * 1000).getHours() >= 7\n          );\n        }\n        case ForecastMode.TODAY:\n        default: {\n          return forecast.filter(\n            (forecastDay) =>\n              new Date(forecastDay.dt * 1000).getDay() ===\n                new Date().getDay() &&\n              new Date(forecastDay.dt * 1000).getHours() >= 7\n          );\n        }\n      }\n    } else {\n      return [];\n    }\n  }\n\n  function selectTodayForecast(): void {\n    setForecastMode(ForecastMode.TODAY);\n  }\n\n  function selectTomorrowForecast(): void {\n    setForecastMode(ForecastMode.TOMORROW);\n  }\n\n  function selectWeekForecast(): void {\n    setForecastMode(ForecastMode.WEEK);\n  }\n\n  const widgetHeader = <div>La météo aujourd'hui à {city?.name}</div>;\n\n  const widgetBody = (\n    <div>\n      {city && weather && weather.weather && (\n        <div className=\"flexRow\">\n          <div>\n            <img\n              style={{ width: '80px' }}\n              src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n              title={weather.weather[0].description}\n              alt={weather.weather[0].description}\n            />\n          </div>\n          <div className=\"flexRow\" style={{ placeItems: 'center' }}>\n            <div className=\"flexColumn mr5\">\n              <div>{weather.weather[0].description}</div>\n              <div>\n                <i className=\"fa fa-thermometer-three-quarters fa-md\" />{' '}\n                {weather.main.temp}°\n              </div>\n            </div>\n            <div className=\"flexColumn\">\n              <div className=\"spaceBetween\">\n                <div>\n                  <i className=\"fa fa-sun-o fa-md\" />{' '}\n                  {formatDateFromTimestamp(\n                    weather.sys.sunrise,\n                    adjustTimeWithOffset(weather.timezone)\n                  ).toLocaleTimeString('fr')}\n                </div>\n                <div>\n                  <i className=\"fa fa-moon-o fa-md\" />{' '}\n                  {formatDateFromTimestamp(\n                    weather.sys.sunset,\n                    adjustTimeWithOffset(weather.timezone)\n                  ).toLocaleTimeString('fr')}\n                </div>\n              </div>\n              <div>\n                <i className=\"fa fa-clock-o fa-md\" />{' '}\n                {formatDateFromTimestamp(\n                  weather.dt,\n                  adjustTimeWithOffset(weather.timezone)\n                ).toLocaleString('fr')}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {city && forecast && (\n        <div>\n          <div className=\"flexRow\">\n            <span className=\"bold\">Prévisions</span>\n            <span style={{ alignContent: 'space-between', display: 'flex' }}>\n              <button\n                id=\"toggleTodayForecast\"\n                onClick={selectTodayForecast}\n                style={{ flex: '1' }}\n                className={`btn btn-${\n                  forecastMode === ForecastMode.TODAY ? 'success' : 'primary'\n                } mr-5`}\n              >\n                Aujourd'hui\n              </button>\n              <button\n                id=\"toggleTomorrowForecast\"\n                onClick={selectTomorrowForecast}\n                style={{ flex: '1' }}\n                className={`btn btn-${\n                  forecastMode === ForecastMode.TOMORROW ? 'success' : 'primary'\n                }`}\n              >\n                Demain\n              </button>\n              <button\n                id=\"toggleWeekForecast\"\n                onClick={selectWeekForecast}\n                style={{ flex: '1' }}\n                className={`btn btn-${\n                  forecastMode === ForecastMode.WEEK ? 'success' : 'primary'\n                }`}\n              >\n                Semaine\n              </button>\n            </span>\n          </div>\n          <br />\n          <div style={{ height: '20vh', maxWidth: '100%' }}>\n            <Line\n              data={{\n                labels: filterForecastByMode().map((forecastDay) => {\n                  if (\n                    forecastMode === ForecastMode.TODAY ||\n                    forecastMode === ForecastMode.TOMORROW\n                  ) {\n                    return format(new Date(forecastDay.dt * 1000), 'HH');\n                  } else {\n                    return format(\n                      new Date(forecastDay.dt * 1000),\n                      'EEE dd MMM'\n                    );\n                  }\n                }),\n                datasets: [\n                  {\n                    label: 'Température',\n                    borderColor: 'orange',\n                    data: filterForecastByMode().map(\n                      (forecastDay) => forecastDay.main.temp_max\n                    )\n                  },\n                  {\n                    label: 'Ressenti',\n                    borderColor: 'red',\n                    data: filterForecastByMode().map(\n                      (forecastDay) => forecastDay.main.feels_like\n                    )\n                  }\n                ]\n              }}\n              options={{ maintainAspectRatio: false }}\n            />\n          </div>\n          <div className=\"flexRow forecastRow\">\n            {city &&\n              forecast &&\n              filterForecastByMode().map((forecastDay) => {\n                return (\n                  <div className=\"forecastContainer\" key={forecastDay.dt}>\n                    <Forecast {...forecastDay} city={city} />\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <Widget\n      id={props.id}\n      tabId={props.tabId}\n      config={{ city: city }}\n      header={widgetHeader}\n      body={widgetBody}\n      editModeComponent={\n        <EmptyWeatherWidget\n          city={cityToQuery}\n          onConfigSubmitted={onConfigSubmitted}\n        />\n      }\n      refreshFunction={refreshWidget}\n      onDeleteButtonClicked={props.onDeleteButtonClicked}\n    />\n  );\n}\n","import { FunctionComponent } from 'react';\nimport {\n  adjustTimeWithOffset,\n  formatDateFromTimestamp\n} from '../../../utils/DateUtils';\nimport { IForecast } from '../IWeather';\nimport './Forecast.scss';\n\nconst Forecast: FunctionComponent<IForecast> = (props) => {\n  return (\n    <div className=\"forecast\">\n      <div>\n        {formatDateFromTimestamp(\n          props.dt,\n          adjustTimeWithOffset(props.city.timezone)\n        ).toLocaleString('fr', {\n          weekday: 'short',\n          day: 'numeric',\n          hour: '2-digit'\n        })}\n      </div>\n      <div className=\"flexRow\">\n        <div>\n          <img\n            src={`https://openweathermap.org/img/wn/${props.weather[0]?.icon}@2x.png`}\n            className=\"smallImage\"\n            title={props.weather[0]?.description}\n            alt={props.weather[0]?.description}\n          />\n        </div>\n        <div>\n          <div>\n            <i\n              className=\"fa fa-thermometer-three-quarters fa-sm mr10\"\n              style={{ color: 'crimson' }}\n            />\n            {props.main.temp_max}°\n          </div>\n          <div>\n            <i\n              className=\"fa fa-thermometer-quarter fa-sm mr10\"\n              style={{ color: 'blue' }}\n            />\n            {props.main.temp_min}°\n          </div>\n          <div>\n            <i\n              className=\"fa fa-tint fa-sm mr10\"\n              style={{ color: 'lightblue' }}\n            />\n            {props.main.humidity}%\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Forecast;\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { TabPane } from 'reactstrap';\nimport authorizationBearer from 'src/services/auth.header';\nimport FacebookWidget from 'src/widgets/facebook/FacebookWidget';\nimport SteamWidget from 'src/widgets/steam/SteamWidget';\nimport { WidgetTypes } from '../enums/WidgetsEnum';\nimport { ITabState } from '../reducers/tabReducer';\nimport { deleteWidget } from '../services/widget.service';\nimport logger from '../utils/LogUtils';\nimport CalendarWidget from '../widgets/calendar/CalendarWidget';\nimport { IWidgetConfig } from '../widgets/IWidgetConfig';\nimport RSSWidget from '../widgets/rss/RSSWidget';\nimport StravaWidget from '../widgets/strava/StravaWidget';\nimport WeatherWidget from '../widgets/weather/WeatherWidget';\n\ninterface IProps {\n  tabId: number;\n  newWidget?: IWidgetConfig;\n}\n\nexport default function TabDash(props: IProps): React.ReactElement {\n  const [widgets, setWidgets] = useState([]);\n  const activeTab = useSelector((state: ITabState) => state.activeTab);\n\n  useEffect(() => {\n    if (activeTab === props.tabId) {\n      fetch(\n        `${process.env.REACT_APP_BACKEND_URL}/widget/?tabId=${props.tabId}`,\n        {\n          headers: {\n            Authorization: authorizationBearer(),\n            'Content-type': 'application/json'\n          }\n        }\n      )\n        .then((result) => {\n          return result.json();\n        })\n        .then((result) => {\n          setWidgets(result);\n        })\n        .catch((error: Error) => {\n          logger.error(error.message);\n        });\n    }\n  }, [activeTab]);\n\n  useEffect(() => {\n    if (props.newWidget) {\n      setWidgets((widgets as IWidgetConfig[]).concat([props.newWidget]) as []);\n    }\n  }, [props.newWidget != null && props.newWidget.id]);\n\n  function createWidget(widgetConfig: IWidgetConfig) {\n    switch (widgetConfig.type) {\n      case WidgetTypes.WEATHER: {\n        return (\n          <WeatherWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      case WidgetTypes.RSS: {\n        return (\n          <RSSWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      case WidgetTypes.CALENDAR: {\n        return (\n          <CalendarWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      case WidgetTypes.STRAVA: {\n        return (\n          <StravaWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      case WidgetTypes.STEAM: {\n        return (\n          <SteamWidget\n            id={widgetConfig.id}\n            tabId={widgetConfig.tab.id}\n            {...widgetConfig.data}\n            onDeleteButtonClicked={deleteWidgetFromDashboard}\n          />\n        );\n      }\n      default: {\n        return;\n      }\n    }\n  }\n\n  function deleteWidgetFromDashboard(id: number) {\n    deleteWidget(id)\n      .then((response) => {\n        if (response) {\n          setWidgets(\n            widgets.filter((widget: IWidgetConfig) => {\n              return widget.id !== id;\n            })\n          );\n        }\n      })\n      .catch((error: Error) => {\n        logger.error(error.message);\n      });\n  }\n\n  return (\n    <TabPane tabId={props.tabId}>\n      <div className=\"widgetList\">\n        <FacebookWidget />\n        {widgets &&\n          widgets.length > 0 &&\n          widgets.map((widgetConfig: IWidgetConfig) => {\n            return (\n              <div key={widgetConfig.id} className=\"widget\">\n                {createWidget(widgetConfig)}\n              </div>\n            );\n          })}\n      </div>\n    </TabPane>\n  );\n}\n","import 'font-awesome/fonts/fontawesome-webfont.svg';\nimport { useEffect, useRef, useState } from 'react';\nimport {\n  DragDropContext,\n  Draggable,\n  Droppable,\n  DroppableProvided,\n  DropResult\n} from 'react-beautiful-dnd';\nimport { emitCustomEvent } from 'react-custom-events';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Nav, TabContent } from 'reactstrap';\nimport './Dash.scss';\nimport CreateWidgetModal from './modals/CreateWidgetModal';\nimport ImportConfigModal from './modals/ImportConfigModal';\nimport { ITab } from './model/Tab';\nimport NavDash from './navigation/navDash/NavDash';\nimport Login from './pages/login/Login';\nimport { toggleSelectedTab } from './reducers/actions';\nimport { ITabState } from './reducers/tabReducer';\nimport authorizationBearer from './services/auth.header';\nimport authService from './services/auth.service';\nimport { exportConfig } from './services/config.service';\nimport { addTab, updateTabs } from './services/tab.service';\nimport { addWidget } from './services/widget.service';\nimport TabDash from './tab/TabDash';\nimport logger from './utils/LogUtils';\nimport { IWidgetConfig } from './widgets/IWidgetConfig';\n\nexport interface IMenu {\n  link: string;\n  icon: string;\n}\n\nexport default function Dash(): React.ReactElement {\n  const [tabs, setTabs] = useState<ITab[]>([]);\n  const [newWidget, setNewWidget] = useState<IWidgetConfig>();\n\n  const activeTab = useSelector((state: ITabState) => state.activeTab);\n  const dispatch = useDispatch();\n  const isMounted = useRef(false);\n\n  const refreshTimeout = 900000; // 15 minutes\n\n  useEffect(() => {\n    const interval = setInterval(refreshAllWidgets, refreshTimeout);\n    return () => clearInterval(interval); // Clear interval on unmount\n  }, []);\n\n  useEffect(() => {\n    if (isMounted.current && tabs && tabs.length === 0) {\n      addNewTab();\n    }\n  }, [tabs]);\n\n  function initDashboard() {\n    fetch(`${process.env.REACT_APP_BACKEND_URL}/tab/`, {\n      headers: {\n        Authorization: authorizationBearer(),\n        'Content-type': 'application/json'\n      }\n    })\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        setTabs(result);\n        if (result && result.length > 0) {\n          dispatch(toggleSelectedTab(result[0].id));\n        }\n        isMounted.current = true;\n      })\n      .catch((error: Error) => {\n        logger.error(error.message);\n      });\n  }\n\n  function toggleTab(tab: number) {\n    if (activeTab !== tab) {\n      dispatch(toggleSelectedTab(tab));\n    }\n  }\n\n  function refreshAllWidgets() {\n    emitCustomEvent('refreshAllWidgets');\n  }\n\n  function addNewTab() {\n    const newTabLabel = 'Nouvel onglet';\n    addTab(newTabLabel).then((response) => {\n      const insertedTab = response.data as ITab;\n      setTabs(tabs.concat(insertedTab));\n      dispatch(toggleSelectedTab(insertedTab.id));\n    });\n  }\n\n  function getNewWidget(tabId: number) {\n    if (newWidget && tabId === newWidget.tab.id) {\n      return newWidget;\n    } else {\n      return undefined;\n    }\n  }\n\n  function onWidgetAdded(type: React.MouseEvent<HTMLButtonElement>) {\n    if (activeTab) {\n      addWidget(type.currentTarget.value, activeTab)\n        .then((response) => {\n          if (response) {\n            const widgetData = response.data as IWidgetConfig;\n            setNewWidget(widgetData);\n          }\n        })\n        .catch((error) => {\n          logger.error(error.message);\n        });\n    }\n  }\n\n  function onTabDeleted(id: number) {\n    if (tabs.length > 1) {\n      if (tabs[0].id === id) {\n        dispatch(toggleSelectedTab(tabs[1].id));\n      } else if (activeTab === id) {\n        dispatch(toggleSelectedTab(tabs[0].id));\n      } else {\n        dispatch(toggleSelectedTab(activeTab));\n      }\n    }\n    setTabs(tabs.filter((tab) => tab.id !== id));\n  }\n\n  function reorder(\n    list: unknown[],\n    startIndex: number,\n    endIndex: number\n  ): unknown[] {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  }\n\n  function onDragEnd(result: DropResult) {\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      tabs,\n      result.source.index,\n      result.destination.index\n    ).map((tab, index) => {\n      (tab as ITab).tabOrder = index;\n      return tab;\n    });\n    updateTabs(items as ITab[]).then((response) => {\n      setTabs(response.data as ITab[]);\n    });\n  }\n\n  function downloadConfig(): Promise<void> {\n    return exportConfig()\n      .then((response) => {\n        logger.info('Configuration exportée');\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'dashboardConfig.json');\n        document.body.appendChild(link);\n        link.click();\n      })\n      .catch(() => {\n        logger.error(\"Erreur lors de l'export de la configuration\");\n      });\n  }\n\n  useEffect(initDashboard, []);\n\n  return (\n    <div className=\"dash\">\n      {!authService.getCurrentUser() && <Login />}\n      {authService.getCurrentUser() && (\n        <div className=\"flexRow\">\n          <div className=\"dashNavbar\">\n            {activeTab && tabs.length > 0 && (\n              <Nav vertical={true} navbar={true}>\n                <CreateWidgetModal onWidgetAdded={onWidgetAdded} />\n                <div>\n                  <Button\n                    id=\"reloadAllWidgetsButton\"\n                    className=\"dashNavbarLink\"\n                    onClick={refreshAllWidgets}\n                  >\n                    <i className=\"fa fa-refresh fa-lg\" aria-hidden=\"true\" />\n                  </Button>\n                </div>\n                <div>\n                  <Button\n                    id=\"downloadConfigButton\"\n                    className=\"dashNavbarLink\"\n                    onClick={downloadConfig}\n                  >\n                    <i className=\"fa fa-download fa-lg\" aria-hidden=\"true\" />\n                  </Button>\n                </div>\n\n                <ImportConfigModal />\n              </Nav>\n            )}\n          </div>\n\n          <div className=\"flexColumn tabsBar\">\n            <Nav tabs={true}>\n              <div className=\"flexRow\">\n                <DragDropContext onDragEnd={onDragEnd}>\n                  <Droppable droppableId=\"droppable\" direction=\"horizontal\">\n                    {(providedDroppable: DroppableProvided) => (\n                      <div\n                        className=\"flexRow\"\n                        {...providedDroppable.droppableProps}\n                        ref={providedDroppable.innerRef}\n                      >\n                        {tabs.length > 0 &&\n                          tabs.map((tab: ITab, index: number) => {\n                            return (\n                              <Draggable\n                                key={tab.id}\n                                draggableId={tab.id.toString()}\n                                index={index}\n                              >\n                                {(providedDraggable) => (\n                                  <div\n                                    key={tab.id}\n                                    ref={providedDraggable.innerRef}\n                                    {...providedDraggable.draggableProps}\n                                    {...providedDraggable.dragHandleProps}\n                                    className={`tab ${\n                                      tab.id === activeTab ? 'selectedItem' : ''\n                                    }`}\n                                  >\n                                    <NavDash\n                                      tab={tab}\n                                      onTabClicked={() => toggleTab(tab.id)}\n                                      onTabDeleted={onTabDeleted}\n                                    />\n                                  </div>\n                                )}\n                              </Draggable>\n                            );\n                          })}\n                        {providedDroppable.placeholder}\n                      </div>\n                    )}\n                  </Droppable>\n                </DragDropContext>\n                <Button\n                  onClick={addNewTab}\n                  id=\"addNewTabButton\"\n                  className=\"fa fa-plus-circle fa-lg\"\n                />\n                <Button\n                  onClick={authService.logout}\n                  className=\"btn btn-primary\"\n                >\n                  Se déconnecter\n                </Button>\n              </div>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n              {tabs.length > 0 &&\n                tabs.map((tab: ITab) => {\n                  return (\n                    <TabDash\n                      key={tab.id}\n                      newWidget={getNewWidget(tab.id)}\n                      tabId={tab.id}\n                    />\n                  );\n                })}\n            </TabContent>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { TOGGLE_TAB } from './actionTypes';\n\nexport interface ITabState {\n  activeTab: number;\n}\n\nconst initialState: ITabState = {\n  activeTab: -1\n};\n\nexport default function (\n  state = initialState,\n  action: { type: string; payload: { id: number } }\n): ITabState {\n  switch (action.type) {\n    case TOGGLE_TAB: {\n      const { id } = action.payload;\n      return {\n        ...state,\n        activeTab: id\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { createStore } from 'redux';\nimport rootReducer from './tabReducer';\n\nexport default createStore(rootReducer);\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport Dash from './Dash';\nimport './index.scss';\nimport store from './reducers/store';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Dash />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nregisterServiceWorker();\n"],"sourceRoot":""}